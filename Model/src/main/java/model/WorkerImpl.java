package model;

import java.math.BigDecimal;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Sequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 21 11:58:02 AST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WorkerImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        Id,
        SerialNumber,
        Qid,
        Name,
        NationalityCode,
        Gender,
        SocialStatus,
        SpouseQid,
        BirthDate,
        HiringDate,
        JobNumber,
        JobName,
        ContractType,
        EducationalLevel,
        Specialization,
        BasicSalary,
        SocialAllowance,
        TransportAllowance,
        WorkNatureAllowance,
        HousingAllowance,
        OtherAllowance,
        TotalMonthlySalary,
        HousingType,
        AdditionalNotes;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int SERIALNUMBER = AttributesEnum.SerialNumber.index();
    public static final int QID = AttributesEnum.Qid.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int NATIONALITYCODE = AttributesEnum.NationalityCode.index();
    public static final int GENDER = AttributesEnum.Gender.index();
    public static final int SOCIALSTATUS = AttributesEnum.SocialStatus.index();
    public static final int SPOUSEQID = AttributesEnum.SpouseQid.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int HIRINGDATE = AttributesEnum.HiringDate.index();
    public static final int JOBNUMBER = AttributesEnum.JobNumber.index();
    public static final int JOBNAME = AttributesEnum.JobName.index();
    public static final int CONTRACTTYPE = AttributesEnum.ContractType.index();
    public static final int EDUCATIONALLEVEL = AttributesEnum.EducationalLevel.index();
    public static final int SPECIALIZATION = AttributesEnum.Specialization.index();
    public static final int BASICSALARY = AttributesEnum.BasicSalary.index();
    public static final int SOCIALALLOWANCE = AttributesEnum.SocialAllowance.index();
    public static final int TRANSPORTALLOWANCE = AttributesEnum.TransportAllowance.index();
    public static final int WORKNATUREALLOWANCE = AttributesEnum.WorkNatureAllowance.index();
    public static final int HOUSINGALLOWANCE = AttributesEnum.HousingAllowance.index();
    public static final int OTHERALLOWANCE = AttributesEnum.OtherAllowance.index();
    public static final int TOTALMONTHLYSALARY = AttributesEnum.TotalMonthlySalary.index();
    public static final int HOUSINGTYPE = AttributesEnum.HousingType.index();
    public static final int ADDITIONALNOTES = AttributesEnum.AdditionalNotes.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WorkerImpl() {
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Worker");
    }


}

